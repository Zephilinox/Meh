name: Linting

on:
  push:
  release:

concurrency:
  group: linting-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commonlib-linting:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "commonlib-lint",
            library_title: "CommonLib",
            library_caps: "COMMONLIB",
            library_lower: "commonlib",
          }
        - {
            name: "myapp-lint",
            library_title: "MyApp",
            library_caps: "MYAPP",
            library_lower: "myapp",
          }
        - {
            name: "mylib-lint",
            library_title: "MyLib",
            library_caps: "MYLIB",
            library_lower: "mylib",
          }
    steps:
      - uses: actions/checkout@v2
      
      - name: CPM Cache
        id: cache-cpm
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/.cpmcache
          key: ${{ matrix.config.os }}-cpm-${{ hashFiles('**/') }}
          restore-keys: |
            ${{ matrix.config.os }}-cpm-

      - name: Install dependencies on ubuntu
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install ninja-build
          sudo apt-get install clang-format
          sudo apt-get install clang-tidy
          sudo apt-get install cppcheck
          sudo apt-get install libgles2-mesa-dev
          ninja --version
          cmake --version
          gcc --version
          clang --version
          clang-format --version
          clang-tidy --version
          cppcheck --version

      - name: Configure
        shell: bash
        run: |
          export CC=clang
          export CXX=clang++
          cmake \
            -S ${{ matrix.config.library_title }} \
            -B ${{ matrix.config.library_title }}/build \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -D${{ matrix.config.library_caps }}_CI=ON \
            -D${{ matrix.config.library_caps }}_CLANG_FORMAT_CHECK=ON \
            -D${{ matrix.config.library_caps }}_CLANG_TIDY_CHECK=ON \
            -D${{ matrix.config.library_caps }}_CPPCHECK=ON \
            -G "Ninja"

      - name: clang-format
        shell: bash
        run: | 
          export CC=clang
          export CXX=clang++
          cmake --build ${{ matrix.config.library_title }}/build --target ${{ matrix.config.library_lower }}_clang_format_check

      - name: clang-tidy
        shell: bash
        if: always()
        run: | 
          export CC=clang
          export CXX=clang++
          cmake --build ${{ matrix.config.library_title }}/build --target ${{ matrix.config.library_lower }}_clang_tidy_check

      - name: cppcheck
        shell: bash
        if: always()
        run: | 
          export CC=clang
          export CXX=clang++
          cmake --build ${{ matrix.config.library_title }}/build --target ${{ matrix.config.library_lower }}_cppcheck